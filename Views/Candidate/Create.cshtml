@model GrouponJobsMVC.Models.Candidate
@{
    ViewBag.Title = "Candidate Form";
}
<h2>
    Candidate Form</h2>
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-1.7.1.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui-1.8.18.custom.min.js")"></script>
<script>

    $(function () {
        $(".datepicker").datepicker({
            dateFormat: 'dd-mm-yy',
            yearRange: '-65:+5',
            minDate: new Date(1995, 10 - 1, 25),
            changeYear: true,
            maxDate: "+3Y"
        });
    });


    $(document).ready(function () {
        $('.saveButton').click(function () {
            alert("AH");
            var teste = "LOL";
            alert(teste);
            var form = $(this);
            $.ajax({
                type: "POST",
                url: "/Candidate/CompanyAdd",
                //                data: $('#formCandidate').serialize(),
                data: $('#formCandidate').serialize(),
                success: function (result) {
                    console.log(result); //log to the console to see whether it worked
                },
                error: function (error) {
                    alert("There was an error posting the data to the server: " + error.responseText);
                }
            });
        });
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(false)
    <fieldset id="formCandidate">
        <legend>Candidate</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName, "First Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastName, "Last Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Email, "E-Mail")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Birthday, "Birthday")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Birthday, new { Class = "datepicker" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.HomePhone, "Home Phone")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HomePhone)
            @Html.ValidationMessageFor(model => model.HomePhone)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.MobilePhone, "Mobile Phone")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MobilePhone)
            @Html.ValidationMessageFor(model => model.MobilePhone)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Gender, "Gender")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Gender, new SelectList(new Dictionary<int, string> { { 0, "Masculino" }, { 1, "Feminino" } }, "Key", "Value"))
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.WillTravel)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.WillTravel, new SelectList(new Dictionary<int, string> { { 0, "Sim" }, { 1, "Não" } }, "Key", "Value"))
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastSalary, "Last Salary")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastSalary)
            @Html.ValidationMessageFor(model => model.LastSalary)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SalaryExpectation, "Salary Expectation")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SalaryExpectation)
            @Html.ValidationMessageFor(model => model.SalaryExpectation)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.Name, "Street Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.Name)
            @Html.ValidationMessageFor(model => model.Address.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.Neighbourhood)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.Neighbourhood)
            @Html.ValidationMessageFor(model => model.Address.Neighbourhood)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.CEP)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address.CEP)
            @Html.ValidationMessageFor(model => model.Address.CEP)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.CityId, "City")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Address.CityId, GrouponJobsMVC.Views.Candidate.CandidateDropDown.City())
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.MaritalStatusId, "Marital Status")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.MaritalStatusId, GrouponJobsMVC.Views.Candidate.CandidateDropDown.MaritalStatus())
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.RequisitionId, "Requisition")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.RequisitionId, GrouponJobsMVC.Views.Candidate.CandidateDropDown.Requisition())
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DisabilityId, "Disability")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(Model => Model.DisabilityId, GrouponJobsMVC.Views.Candidate.CandidateDropDown.Disability())
        </div>
        <h2>
            Professional Experiences
        </h2>
        <h3>
            Languages</h3>
        <div class="Languages">
            @for (int i = 0; i < 2; i++)
            {

                @Html.Label("Select Language:")<br />
                @Html.DropDownListFor(m => m.Language[i], GrouponJobsMVC.Views.Candidate.CandidateDropDown.LanguageName())<br />
                @Html.Label("Fluency:")<br />
                @Html.DropDownListFor(m => m.Language[i].Fluency, new SelectList(new Dictionary<int, string> { { 0, "Basico" }, { 1, "Intermediario" }, { 2, "Avançado" }, { 3, "Fluente" } }, "Key", "Value"))<br />
            }
        </div>
        <h3>
            Company</h3>
        <div class="Company">
            @*@for (int i = 0; i < 2; i++)
            {     *@
            @Html.HiddenFor(m => m.Company[0].NumberCompany)
            @Html.Label("Add a Company")<br />
            @Html.Label("Company Name:")
            <br />
            @Html.TextBoxFor(m => m.Company[0].Name)<br />
            @Html.Label("Company City:")<br />
            @Html.DropDownListFor(m => m.Company[0].Address.CityId, GrouponJobsMVC.Views.Candidate.CandidateDropDown.CompanyCity())<br />
            @Html.Label("Salary:")<br />
            @Html.TextBoxFor(m => m.Company[0].Salary)<br />
            <br />
            @*
            }*@
            @Html.ActionLink("Add Company", "CompanyAdd", "Candidate", null, new { @class = "saveButton", onclick = "return false;" })
        </div>
        <h3>
            Courses</h3>
        <div class="Courses">
            @for (int i = 0; i < 3; i++)
            {                
                @Html.HiddenFor(m => m.Courses[i].NumberCourses, new { Value = i })                
                @Html.Label("Course " + (i + 1) + "")<br />
                @Html.Label("Course Name:")  <br />
                @Html.TextBoxFor(m => m.Courses[i].Name)<br />
                @Html.Label("School Name:")<br />
                @Html.TextBoxFor(m => m.Courses[i].SchoolName)<br />
                @Html.Label("Course Start(Year):")<br />
                @Html.TextBoxFor(m => m.Courses[i].Start, new { Class = "datepicker" })<br />
                @Html.Label("Course End(Year):")<br />
                @Html.TextBoxFor(m => m.Courses[i].End, new { Class = "datepicker" })<br />
                <br />                

            }
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
